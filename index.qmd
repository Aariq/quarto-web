---
title: Welcome to Quarto
subtitle: A scientific and technical publishing system built on Pandoc
format: html
---

## Introduction

Quarto is an [open-source](https://github.com/quarto-dev/quarto-cli) scientific and technical publishing system built on [Pandoc](https://pandoc.org). Quarto documents are authored using [markdown](https://en.wikipedia.org/wiki/Markdown), an easy to write plain text format.

In addition to the core capabilities of Pandoc, Quarto includes:

1.  Embedding code and output from Python, R, and Julia via integration with [Jupyter](https://jupyter.org/) and [Knitr](https://yihui.org/knitr/) .

2.  A variety of extensions to Pandoc markdown useful for technical writing including cross-references, sub-figures, layout panels, hover-able citations and footnotes, callouts, and more.

3.  Authoring using a wide variety of editors and notebooks including [JupyterLab](tools/jupyter-lab.qmd), [RStudio](tools/rstudio.qmd), and [VS Code](tools/vscode.qmd).

4.  A [visual editor](docs/visual-editor/) that provides a productive writing interface for composing long-form markdown documents.

5.  A project system for rendering groups of documents at once, sharing options across documents, and producing aggregate output like [books](docs/books/book-basics.qmd) and [websites](docs/websites/website-basics.qmd).

The overall design of Quarto is influenced heavily by [R Markdown](https://rmarkdown.rstudio.com/), however unlike R Markdown the architecture is language agnostic. In its current iteration, Quarto can render plain markdown, Jupyter Notebooks, and Knitr documents.

## Hello, Quarto

Here's a simple example of a markdown document that includes a cross-referenced figure generated by [Matplotlib](https://matplotlib.org/):

```` python
---
title: "Matplotlib Demo"
author: "Norah Smith"
date: "May 22nd, 2021"
format: 
  html:
    code-fold: true
jupyter: python3
---

## Polar Axis

For a demonstration of a line plot on a polar axis, see @fig-polar.

```{python}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(subplot_kw={'projection': 'polar'})
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```
````

Here's what the document looks like when rendered by Quarto:

![](docs/getting-started/images/hello-quarto.png){.border .preview-image}

You can render documents using the `quarto` command line tool:

``` bash
quarto render matplotlib-demo.qmd
```

Embedded code blocks (in this case some Python code that generates a plot) are run by Quarto, and their output is included in the final document generated by Pandoc.

Note that we use the file extension `.qmd` to indicate that this isn't a plain markdown file but rather one with embedded computations to be run by Quarto.

Don't worry if all the mechanics of this example aren't obvious, the main takeaway is that Quarto enables you to enhance [Pandoc markdown](https://pandoc.org/MANUAL.html#pandocs-markdown) documents with features useful for scientific and technical communication including executable code, cross-references, and much more.

::: callout-note
While this example demonstrates rendering a `.qmd` markdown file, Quarto can also directly render existing computational document formats like Jupyter Notebooks (.ipynb) and R Markdown (.Rmd).
:::

## Getting Started

[Installation](docs/getting-started/installation.qmd) will get you up and running with Quarto (including additional dependencies required for computational documents).

[Quarto Basics](docs/getting-started/quarto-basics.qmd) will help you learn the core mechanics of rendering markdown from the command line as well as how to specify document formats and options.

[Running Code](docs/computations/running-code.qmd) explains how to work with Jupyter and Knitr based computational documents in more depth.

[JupyterLab](tools/jupyter-lab.qmd), [RStudio](tools/rstudio.qmd), and [VS Code](tools/vscode.qmd) help you create an optimal workflow in your code editing tool(s) of choice.

[Visual Editor](docs/visual-editor/) describes how to use Quarto's visual interface for composing long-form markdown documents.
