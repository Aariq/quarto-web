---
title: "Shortcodes"
---

## Overview

Shortcodes are special markdown directives that generate various types of content. Quarto shortcodes are similar in form and function to [Hugo shortcodes](https://gohugo.io/content-management/shortcodes/) and [WordPress shortcodes](https://codex.wordpress.org/Shortcode).

Quarto currently supports just two shortcodes: `meta` and `var`. Additional shortcodes (e.g. for inserting videos, tweets, gists, etc.) will be developed soon.

## meta

The `meta` shortcode allows you to insert content from Pandoc metadata (e.g. YAML at the top of the document and/or in `_quarto.yml`).

For example, the following shortcode inserts the value of the `title` field from YAML metadata:

``` {.markdown shortcodes="false"}
{{< meta title >}}
```

You can dereference sub-keys using the dot (`.)` delimiter. For example:

``` {.markdown shortcodes="false"}
{{< meta author.affiliation >}}
```

## var

The `var` shortcode enables you to insert content from a project-level `_variables.yml` file. Create this file alongside your `_quarto.yml` project file, and then include references to those variables within any document in your project.

Variables can be either simple values or can include arbitrary markdown content. To define variables, create a `_variables.yml` file in the root directory of your project. For example:

``` yaml
version: 1.2

email:
  info: info@example.com
  support: support@example.com

engine:
  jupyter: "[Jupyter](https://jupyter.org)"
  knitr: "[Knitr](<https://yihui.name/knitr>)"
```

Note that the `engine` variable values include markdown for hyperlinks.

To include the value of a variable, use the `{{</* var */>}}` shortcode, for example:

``` {.markdown shortcodes="false"}
Version {{< var version >}} is a minor upgrade.

Please contact us at {{< var email.info >}}.

Quarto includes {{< var engine.jupyter >}} and 
{{< var engine.knitr >}} computation engines.
```

## env

The `env` shortcode enables you to read values from environment variables. For example:

``` {.markdown shortcodes="false"}
Version {{ env PRODUCT_VERSION }} is a minor upgrade.
```

## Escaping

If you are writing documentation about using shortcodes (for example, this article!) you might need to prevent them from being processed. You can do this in two ways:

1.  Escape the shortcode reference like this:

    ``` {.default shortcodes="false"}
    {{</* var version */>}}
    ```

2.  Add a `shortcodes=false` attribute to any code block you want to prevent processing of shortcodes within:

    ```` {.default shortcodes="false"}
    ```{shortcodes=false}
    {{< var version >}}
    ```
    ````
