---
title: Markdown Basics
description: "Quarto is based on Pandoc and uses it’s variation of markdown as it’s underlying document syntax."
format: html
---

## Overview

Quarto is based on Pandoc and uses its variation of markdown as its underlying document syntax. Pandoc markdown is an extended and slightly revised version of John Gruber's [Markdown](https://daringfireball.net/projects/markdown/) syntax.

Markdown is a plain text format that is designed to be easy to write, and, even more importantly, easy to read:

> A Markdown-formatted document should be publishable as-is, as plain text, without looking like it's been marked up with tags or formatting instructions. -- [John Gruber](https://daringfireball.net/projects/markdown/syntax#philosophy)

This document provides examples of the most commonly used markdown syntax. See the full documentation of [Pandoc's Markdown](https://pandoc.org/MANUAL.html#pandocs-markdown) for more in-depth documentation.

## Text Formatting

+-----------------------------------+-------------------------------+
| Markdown Syntax                   | Output                        |
+===================================+===============================+
|     *italics* and **bold**        | *italics* and **bold**        |
+-----------------------------------+-------------------------------+
|     superscript^2^ / subscript~2~ | superscript^2^ / subscript~2~ |
+-----------------------------------+-------------------------------+
|     ~~strikethrough~~             | ~~strikethrough~~             |
+-----------------------------------+-------------------------------+
|     `verbatim code`               | `verbatim code`               |
+-----------------------------------+-------------------------------+

## Headings {#headings}

+---------------------+-----------------------------------+
| Markdown Syntax     | Output                            |
+=====================+===================================+
|     # Header 1      | # Header 1 {.heading-output}      |
+---------------------+-----------------------------------+
|     ## Header 2     | ## Header 2 {.heading-output}     |
+---------------------+-----------------------------------+
|     ### Header 3    | ### Header 3 {.heading-output}    |
+---------------------+-----------------------------------+
|     #### Header 4   | #### Header 4 {.heading-output}   |
+---------------------+-----------------------------------+
|     ##### Header 5  | ##### Header 5 {.heading-output}  |
+---------------------+-----------------------------------+
|     ###### Header 6 | ###### Header 6 {.heading-output} |
+---------------------+-----------------------------------+

```{=html}
<style type="text/css">
.heading-output {
  border-bottom: none;
  margin-top: 0;
  margin-bottom: 0;
}
</style>
```
## Links & Images

+------------------------------------------------------------------+-------------------------------------------------------------+
| Markdown Syntax                                                  | Output                                                      |
+==================================================================+=============================================================+
|     [Quarto](https://quarto.org)                                 | [Quarto](https://quarto.org)                                |
+------------------------------------------------------------------+-------------------------------------------------------------+
|     ![Caption](elephant.png)                                     | ![Caption](elephant.png)                                    |
+------------------------------------------------------------------+-------------------------------------------------------------+
|     [![Caption](elephant.png)](https://quarto.org)               | [![Caption](elephant.png)](https:/quarto.org)               |
+------------------------------------------------------------------+-------------------------------------------------------------+
|     [![Caption](elephant.png)](https://quarto.org "An elephant") | [![Caption](elephant.png "An elephant")](https:/quarto.org) |
+------------------------------------------------------------------+-------------------------------------------------------------+
|     [![](elephant.png){fig-alt="Alt text"}](https://quarto.org)  | [![](elephant.png){fig-alt="Alt text"}](https://quarto.org) |
+------------------------------------------------------------------+-------------------------------------------------------------+

## Lists

+-------------------------------------+---------------------------------+
| Markdown Syntax                     | Output                          |
+=====================================+=================================+
|     * unordered list                | -   unordered list              |
|         + sub-item 1                |                                 |
|         + sub-item 2                |     -   sub-item 1              |
|             - sub-sub-item 1        |                                 |
|                                     |     -   sub-item 2              |
|                                     |                                 |
|                                     |         -   sub-sub-item 1      |
+-------------------------------------+---------------------------------+
|     *   item 2                      | -   item 2                      |
|                                     |                                 |
|         Continued (indent 4 spaces) |     Continued (indent 4 spaces) |
+-------------------------------------+---------------------------------+
|     1. ordered list                 | 1.  ordered list                |
|     2. item 2                       |                                 |
|         i) sub-item 1               | 2.  item 2                      |
|              A.  sub-sub-item 1     |                                 |
|                                     |     i)  sub-item 1              |
|                                     |                                 |
|                                     |         A.  sub-sub-item 1      |
+-------------------------------------+---------------------------------+
|     (@)  A list whose numbering     | (1) A list whose numbering      |
|                                     |                                 |
|     continues after                 | continues after                 |
|                                     |                                 |
|     (@)  an interruption            | (2) an interruption             |
+-------------------------------------+---------------------------------+
|     term                            | term                            |
|     : definition                    |                                 |
|                                     | :   definition                  |
+-------------------------------------+---------------------------------+

## Tables

#### Markdown Syntax

    | Right | Left | Default | Center |
    |------:|:-----|---------|:------:|
    |   12  |  12  |    12   |    12  |
    |  123  |  123 |   123   |   123  |
    |    1  |    1 |     1   |     1  |

#### Output

| Right | Left | Default | Center |
|------:|:-----|---------|:------:|
|    12 | 12   | 12      |   12   |
|   123 | 123  | 123     |  123   |
|     1 | 1    | 1       |   1    |

## Equations

Use `$` delimiters for inline math and `$$` delimiters for display math. For example:

+-------------------------------+-------------------------+
| Markdown Syntax               | Output                  |
+===============================+=========================+
|     inline math: $E = mc^{2}$ | inline math: $E=mc^{2}$ |
+-------------------------------+-------------------------+
|     display math:             | display math:\          |
|                               | $$E = mc^{2}$$          |
|     $$E = mc^{2}$$            |                         |
+-------------------------------+-------------------------+

If you want to define custom TeX macros, include them within `$$` delimiters enclosed in a `.hidden` block. For example:

``` tex
::: {.hidden}
$$
 \def\RR{{\bf R}}
 \def\bold#1{{\bf #1}}
$$
:::
```

For HTML math processed using [MathJax](https://docs.mathjax.org/) (the default) you can use the `\def`, `\newcommand`, `\renewcommand`, `\newenvironment`, `\renewenvironment`, and `\let` commands to create your own macros and environments.

## Special Blocks

+-----------------------------+--------------------------+
| Markdown Syntax             | Output                   |
+=============================+==========================+
|     > Blockquote            | > Blockquote             |
+-----------------------------+--------------------------+
|     ::: {.classname}        | ::: classname            |
|     Div                     | Div                      |
|     :::                     | :::                      |
+-----------------------------+--------------------------+
|     | Line Block            | | Line Block             |
|     |   Spaces and newlines | |    Spaces and newlines |
|     |   are preserved       | |    are preserved       |
+-----------------------------+--------------------------+

### Special Characters

+-----------------+--------------+
| Markdown Syntax | Output       |
+=================+==============+
|     endash: --  | endash: --   |
+-----------------+--------------+
|     emdash: --- | emdash: ---  |
+-----------------+--------------+

## Document Language

Document language plays a role in Pandoc's processing of most formats, and controls hyphenation in PDF output when using LaTeX (through [`babel`](https://ctan.org/pkg/babel) and [`polyglossia`](https://ctan.org/pkg/polyglossia)) or ConTeXt.

Additonally, Quarto, Pandoc, and LaTeX will sometimes generate textual output that requires localization. For example, "Figure" or "List of Figures" for cross references, callout captions like "Note" or "Warning", or the "Code" caption for folded code chunks.

The [`lang`](https://pandoc.org/MANUAL.html#language-variables) document option is used to identifies the main language of the document using IETF language tags (following the [BCP 47](https://tools.ietf.org/html/bcp47) standard), such as `en` or `en-GB`. The [Language subtag lookup](https://r12a.github.io/app-subtags/) tool can look up or verify these tags.

For example, this document specifies the use of French:

``` yaml
---
title: "My Document"
lang: fr    
---
```

Quarto includes built-in translations for the following languages:

-   English (`en`, used by default)
-   French (`fr`)

You can also create and use a custom translation as follows:

1.  Make a copy of the default `_language.yml` file (<https://github.com/quarto-dev/quarto-cli/blob/main/src/resources/language/_language.yml>).

2.  Provide translations from the default English values.

3.  Specify the custom translation file using the `language` option. For example:

    ``` yaml
    ---
    language: custom.yml
    ---
    ```

The `language` option can be specified at a project or document level. Additionally, if you include a `_language.yml` file in the root of your project alongside your `_quarto.yml` config file it will be automatically used.

If you create a language translation file please consider contributing it so others can benefit from it. See the documentation on [contributing language translations](https://github.com/quarto-dev/quarto-cli/tree/main/src/resources/language) for additional details.
