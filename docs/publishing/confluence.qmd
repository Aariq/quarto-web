---
title: "Confluence"
provider: confluence
provider-name: Confluence
provider-publish-url: "https://myteam.atlassian.net/wiki/spaces/TEAMSPACE/pages/123456/Plan"
---

## Overview

::: callout-note
#### Quarto v1.3 Required

Confluence publish is a new feature in Quarto v1.3. Before attempting to try it out, please download and install Quarto v1.3 from <https://quarto.org/docs/download/>.
:::

[Atlassian Confluence](https://www.atlassian.com/software/confluence) is a publishing platform for supporting team collaboration. There are a variety of hosting options which include both free and paid subscription plans.

It's important to note that some documents and sites published to Confluence are **publicly visible**. You should ensure that you only publish content you wish to share publicly to your public Confluence pages.

The best way to publish content to Confluence is to use the `quarto publish` command to publish content rendered on your local machine.

Before attempting your first publish, be sure that you have created a [free Confluence account](https://www.atlassian.com/try/cloud/signup?bundle=confluence&edition=free) or are [logged into your organization's account](https://start.atlassian.com/).

{{< include _publish-command.md >}}

## Confluence Accounts

If you are have one or multiple Confluence accounts, it's important to understand how to create access tokens for publishing and how to manage accounts after they have been created.

When you publish to Confluence using `quarto publish` an access token is used to grant permission for publishing to your account. If no access token is available for a publish operation then the Quarto CLI will prompt you to authorize one:

### Authorizing an Access Token

``` markdown
$ quarto publish confluence
? Confluence Domain: ›
❯ e.g. https://mydomain.atlassian.net/
```

Enter the URL to your Confluence Domain. This can be found as the first part of the URL to the Confluence page you wish to publish to.

``` markdown
$ quarto publish confluence
? Confluence Account Email: ›
```

Enter the Email Address for the account used in this Confluence Domain. If you aren't sure of the email address, first log into the Confluence space you wish to publish to and then inspect your profile.

``` markdown
$ quarto publish confluence
? Confluence API Token: ›
❯ Create an API token at https://id.atlassian.com/manage/api-tokens
```

Confluence API Tokens [must be created](https://id.atlassian.com/manage/api-tokens), copied, and then pasted from this CLI prompt. For more information on Access Tokens please see the [Confluence Documentation on API Tokens](https://support.atlassian.com/atlassian-account/docs/manage-api-tokens-for-your-atlassian-account/).

``` markdown
$ quarto publish confluence
? Space or Parent Page URL: ›
❯ Browse in Confluence to the space or parent, then copy the URL
```

Any Confluence page in your space can be a parent for publishing. You can also choose your personal Confluence space. Using your default browser, browse to the page you would like to publish to, copy the URL, and paste it at this prompt.

Your Quarto site our document will be published into this location.

::: callout-tip
## Publishing pages into Existing Sites

Multiple pages will not be expanded into existing sites alongside other existing pages. Confluence sites with multiple pages will be published under a single new child page.
:::

### Adding and Removing Accounts

You can list and remove saved accounts using the quarto publish accounts command:

``` markdown
$ quarto publish accounts
 ? Manage Publishing Accounts
 ❯ ✔ Confluence: jj@posit.co
   ✔ Netlify: jj@posit.co
 ❯ Use the arrow keys and spacebar to specify 
   accounts you would like to remove. Press 
   Enter to confirm the list of accounts you
   wish to remain available.
```

## Project Workflow

Above we demonstrated how to publish to Confluence. In this section, we go into more depth on Confluence project workflow.

### Config File

Every Confluence Project has a `_quarto.yml` config file that provides options as well as defaults for documents created within the site. For example, here is the default config file:

``` {.yaml filename="_quarto.yml"}
project:
  type: confluence
```

::: callout-note
## Website Options

Confluence does not support many of the HTML Website options. For example, there is no support for Website listings, Themes or Navigation.
:::

### Project Preview

If you are using VS Code or RStudio, the **Render** button automatically renders and runs `quarto preview` in an embedded window. You can also do the same thing from the Terminal if need be:

``` {.bash filename="Terminal"}
# preview the Confluence project in the current directory
quarto preview
```

Note that when you preview a site (either using VS Code / RStudio integrated tools or from the terminal) changes to configuration files (e.g. `_quarto.yml`) as well as site resources (e.g. theme or CSS files) will cause an automatic refresh of the preview.

You can customize the behavior of the preview server (port, whether it opens a browser, etc.) using command line options or the `_quarto.yml` config file. See `quarto preview help` or the [project file reference](/docs/reference/projects/options.qmd#preview) for additional details.

::: callout-important
As you preview your site, pages will be rendered and updated. However, if you make changes to global options (e.g. `_quarto.yml` or included files) you need to fully re-render your site to have all of the changes reflected. Consequently, you should always fully `quarto render` your site before deploying it, even if you have already previewed changes to some pages with the preview server.
:::

### Project Render

To render (but not preview) a Confluence project, use the `quarto render` command, which will render the project into the `_site` directory by default:

``` {.bash filename="Terminal"}
# render the project in the current directory
quarto render 
```

See the [Project Basics](../projects/quarto-projects.qmd) article to learn more about working with projects, including specifying an explicit list of files to render, as well as adding custom pre and post render scripts to your project.

### Linking

When creating links between pages in your Confluence Project, you can provide the source file as the link target (rather than the path to the Confluence page). You can also add hash identifiers (`#)` to the source file if you want to link to a particular section in the document. For example:

``` markdown
[about](about.qmd)
[about](about.qmd#section)
```

## Limitations

Confluence Publishing does not support all Quarto features. Below, please see a table of known limitations.

|           | Feature   | Description                                                                                    |
|-----------|-----------|------------------------------------------------------------------------------------------------|
| Authoring | Citations | We plan to add support in the future.                                                          |
|           | Diagrams  | No support yet for Mermaid diagrams. We could potentially use a Confluence marketplace plugin. |
|           | Videos    | We plan to add support in the future.                                                          |
