---
title: "Other Services"
---

## Overview

There are a wide variety of ways to publish Quarto websites. Other articles cover publishing to [Quarto Pub](quarto-pub.qmd), [GitHub Pages](github-pages.qmd), [Posit Connect](rstudio-connect.qmd), [Posit Cloud](posit-cloud.qmd), [Netlify](netlify.qmd), and [Confluence](confluence.qmd). Below we'll describe some general guidelines as well as offer some specific advice for [Hugging Face](https://huggingface.co/) as well as [Firebase](#google-firebase), [Site44], and [Amazon S3]. We'll mostly defer to the documentation provided by the various services, but will note any Quarto website specific configuration required.

The most important thing to understand is that website content is by default written to the `_site` sub-directory and book content to the `_book` directory (you can customize either using the `output-dir` option). Publishing is simply a matter of copying the output directory to a web server or web hosting service.

### Rendering for Publish

Prior to publishing you should always do a final render of your project to ensure that your output is up to date:

``` {.bash filename="Terminal"}
quarto render
```

This is particularly important to remember because changes you make to shared site configuration (e.g. `_quarto.yml`) aren't reflected across your entire site until your render the entire project.

## Hugging Face

Hugging Face is a comprehensive platform that offers a wide array of machine learning models, particularly in natural language processing (NLP) and computer vision. It is designed to facilitate the training, deployment, and use of open-access machine learning models, making it easier for developers and researchers to access state-of-the-art models. Hugging Face also provides application and static site hosting as part of its [Spaces project](https://huggingface.co/docs/hub/spaces-overview), which makes it easy to communicate your results with the community.

You can deploy Quarto sites to a Hugging Face Space using the [Quarto template](https://huggingface.co/new-space?template=posit%2Fquarto-template). To do so, create the space, clone it locally and then edit the quarto files in the `src` directory. The Quarto site is served using Docker, so if you need to change system dependencies (like updating the Quarto version), you may need to edit the Dockerfile. You can find various Quarto examples built using Docker at [this repository](https://github.com/analythium/quarto-docker-examples).

## Firebase {#google-firebase}

Google Firebase has a [web hosting service](https://firebase.google.com/docs/hosting/quickstart) that enables easy deployment of websites using a set of command line tools.

Firebase websites by default deploy content from the `public` directory of the Firebase project directory. This means that you should set the `output-dir` to `"public"` within `_quarto.yml`:

``` yaml
project:
  type: website
  output-dir: public
```

## Site44 {data-link="Site44"}

[Site44](https://www.site44.com/) is a service that allows you to publish websites from within Dropbox folders. Site44 creates a `Dropbox/Apps/site44` directory, and any folders within that directory are published as websites.

The recommended workflow for deploying Quarto websites to Site44 is to develop your website in a separate project directory, and then, when it's ready for final publishing, copy the contents of the `_site` directory to the folder for your website.

## Amazon S3 {data-link="Amazon S3"}

If you are a user of Amazon Web Services you can serve your website directly from Amazon S3. Note however that this option is a bit more technically involved than GitHub Pages, Netlify, or Site44. See the article on [Hosting a Static Website on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) for additional details.

## Other Hosts

Any web server or web host can be used to deploy a Quarto website. Here's a recent [CNET roundup](https://www.cnet.com/web-hosting/) of other web hosts you could consider. You can also deploy a Quarto website on any internal (intranet) web server.

You can also render and publish Quarto websites using a Continuous Integration (CI) service. See the articles on [Publishing with CI](ci.qmd) for additional details.
