---
title: "Authoring with Jupyter & RStudio"
---

## Overview

Jupyter and RStudio both include built-in support for authoring Revealjs presentations. This article describes using these tools in more detail.

Note that while these tools have some benefits, you can just as well productively author presentations in any text editor. Just use `quarto preview` to create a live-reloading (re-render on save) preview of your presentation:

``` bash
$ quarto preview presentation.qmd
```

Whenever you save `presentation.qmd` within your text editor, the presentation will be re-rendered and the browser automatically refreshed.

## JupyterLab

## RStudio

The currently [daily build](https://dailies.rstudio.com) of RStudio includes support for authoring Quarto Reveal presentations. This works for plain markdown as well as both the Knitr and Jupyter engines.

You can download the RStudio daily build from <https://dailies.rstudio.com>.

### New Presentation

To create a new Reveal presentation, use the **File -> New File -> Quarto Presentation...** command:

![](images/rstudio-new-presentation.png){.border width="80%"}

### Presentation Preview

When you render a presentation you'll see a preview of in the **Presentation** pane:

![](images/rstudio-presentation-pane.png){.border}

There are a number of convenient features provided by the **Presentation** pane:

-   Navigate quickly to any slide using the slide menu
-   Edit the current slide's source code using the **Edit** button
-   Open the presentation in an external browser using the **Present** button
-   Open the presentation in Print mode using the **Print** button
-   Publish the presentation to RPubs or RStudio Connect using the **Publish** button.

Additionally, when editing a presentation, the preview will automatically navigate to the slide on which you are currently working within.

Note that if you click the **Present** button to open an external browser that view will also automatically update when the presentation is rendered.

### Render on Save

For iterative work on presentations you might find it convenient to enabled the **Render on Save** option, which you can find in the editor toolbar next to the save button:

![](images/rstudio-render-on-save.png){.border}
