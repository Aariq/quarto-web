---
title: "Tutorial: Computations"
editor_options:
  markdown:
    wrap: sentence
    canonical: true
---

``` include
../_tool-chooser.md
```

## Overview

Quarto supports executable code blocks within markdown.
This allows you to create fully reproducible documents and reports---the code required to produce your output is part of the document itself, and is automatically re-run whenever the document is rendered.

In this tutorial we'll show you how to author fully reproducible computational documents with Quarto in RStudio.

If you would like to follow along step-by-step in your own environment, download the Quarto document (`.qmd`) below, open it in RStudio, and click on <kbd>![](images/rstudio-render-button.png){width="25" height="20"}</kbd> Render.

::: {.callout-note appearance="minimal"}
<i class="bi bi-journal-code"></i> [Download computations.qmd](_computations.qmd){download="computations.qmd"}
:::

Note that you will need to open this document in the preview release of RStudio 2022.02.0 "Prairie Trillium", which you can download [here](https://www.rstudio.com/products/rstudio/download/preview/).

## Controlling output

-   echo, warning, include, error
-   fenced-echo go here? If you ever had to teach... https://quarto.org/docs/computations/running-code.html#fenced-echo

## Code blocks

-   code-fold
-   code-link!!
-   code-line-numbers (also used for highlighting)

## Figures

-   fig-width and fig-height
-   fig-cap (can you do referencing from here??)
-   fig-alt (link to writing good alt text resource)

## Tables

Maybe a gt example would look nice and can show caption?

## Inline code

https://quarto.org/docs/computations/running-code.html#knitr

## Caching

-   under `execute` in YAML
-   or chunk by chunk
-   link to https://yihui.org/knitr/demo/cache/ for more info

## Global options?

-   maybe mention here?

``` include
_footer.md
```
