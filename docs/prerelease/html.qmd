---
title: HTML Document Improvements
---

## Multi-Format HTML Output

Starting in Quarto 1.3, HTML pages (either standalone or in a website) can automatically include links to alternative formats for the page (when specified in the document front matter). The additional formats will be automatically placed within the TOC as a new section, if a TOC is enabled for the page. If no TOC is displayed, the additional formats will be displayed in the right margin at the top of the document.

For example, the following document front matter:

``` yaml
title: Sample Page
author: Norah Jones
date: last-modified
toc: true
format: 
  html: default
  ipynb: default
```

Now results in an HTML page which includes the additional notebook format as a part of the TOC region:

![](images/other-format.png){.border}

### Other Format Links

Links to additional formats are displayed by default in Quarto HTML documents, but you can control whether they are shown or even which specific formats are included.

You can provide an explicit list of formats to include in the `Other Formats` section by providing a list as the value for `format-links`. For example, this document front matter will display only the link to the Jupyter format of the document, excluding the PDF:

``` yaml
title: Sample Page
author: Norah Jones
date: last-modified
toc: true
format: 
  html: default
  ipynb: default
  pdf: default
format-links: [ipynb]
```

### Hiding Format Links

To stop the other format links from being shown at all, specify `format-links: false` in your document front matter. For example this front matter will not display the 'Other Formats' links:

``` yaml
title: Sample Page
author: Norah Jones
date: last-modified
toc: true
format: 
  html: default
  ipynb: default
format-links: false
```

::: callout-note
In a Quarto Project, you can use `_metadata.yml`{spellcheck="false"} to control the behavior for a specific folder. Just include the `format`{spellcheck="false"} and `format-links`{spellcheck="false"} options in a `_metadata.yml`{spellcheck="false"} file to apply the options to all files in a folder. See [Directory Metadata](/docs/projects/quarto-projects.qmd#directory-metadata) for additional details.
:::


## HTML Grid 

### Background

Quarto HTML documents are arranged in a structure composed of a sidebar, the body of the document, the margin of the document, and the margins between these elements (gutters). This is illustrated below:

![](images/grid.png)

Quarto documents arrange these elements to support different styles of layout (docked, floating), different variants of the layout based upon the content of the page (for example, a slightly adjusted layout for pages containing only a listing), and responsive sizes for each of the layouts. In each of these different layouts, Quarto adjusts the width, positioning, or visibility of the elements to achieve the desired result. Each of these elements have both a maximum and minimum width, allowing content to flow depending upon the width of the browser that is displaying the document.

The total maximum page width for a Quarto page is determined by the sum of each of these element widths. Quarto constrains the page to the width of the browser itself when possible, scaling the width of the elements to best fit the currently available display.

In Quarto 1.2, the various widths of each of these elements was predefined in Quarto and wasn't customizable without replacing the entire CSS grid system used by Quarto.

### Customization

Starting in Quarto v1.3, you may control the width of the sidebar, body, margin, and gutter of HTML page layouts using YAML or SCSS variables. The width(s) that you provide will specify the maximum width for the element and will be used as a baseline value when computing minimum sizes for the elements. In addition, Quarto will use the width(s) that you provide to derive all the various widths for the differing grid styles and responsive sizes (by scaling the maximum value that you provide).

To set these options in YAML, you may use:

``` yml
format:
  html: 
    grid:
      sidebar-width: 300px
      body-width: 900px
      margin-width: 300px
      gutter-width: 1.5rem
```

Similarly, in a custom theme `scss` file, you may set variables like:

``` css
// The left hand sidebar
$grid-sidebar-width: 250px !default;

// The main body
$grid-body-width: 800px !default;

// The right hand margin bar
$grid-margin-width: 250px !default;

// The gutter that appears between the above columns
$grid-column-gutter-width: 1.5rem !default;
```

`sidebar-width`, `body-width`, and `margin-width` should be specified in pixels (`px`) as the values will be used when computing other sizes. Requiring pixel sizing is a limitation of our approach to the Quarto's layout, but also typically makes sense since the overall document width is usually tied to the browser size and responive breakpoints rather than font size or other relative measures.

`gutter-width` may be specified in pixels or other units such as `em` or `rem` which are responsive to the document font size.
