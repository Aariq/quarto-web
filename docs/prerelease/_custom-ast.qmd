## Custom AST nodes

Quarto now supports custom AST nodes. This allows you to define your own AST nodes, have them rendered in the output document, as well as conveniently processed in Lua filters.

### Example: Callouts in previous versions of Quarto

In previous versions of Quarto, callouts would be represented directly as a div with a class starting with `callout`, and the contents laid out in a [particular way](/docs/authoring/callouts.qmd).

While _authoring_ documents, this syntax remains unchanged. But when processing the document, the callout divs are now represented as a custom AST node, which can be processed in Lua filters. In Quarto 1.3, callouts can be captured in Lua filters more directly. For example, here is a filter
that forces every callout to be of type "caution":

```lua
function Callout(callout)
  -- do something with the callout
  callout.type = "caution"
  return callout
end
```


### Defining custom AST nodes

To create a new custom AST node, use the `quarto.ast.create_custom_node` Lua function.
This function takes a table with a number of parameters (see the [source code for a full example](https://github.com/quarto-dev/quarto-cli/blob/v1.3/src/resources/filters/ast/customnodes.lua#L7-L62)).

