---
title: "Interactive Dashboards"
---

## Overview

Adding interactivity to a dashboard helps uses explore the concepts and data you are presenting more deeply. There are several ways to add interactive components to Quarto dashboards:

- [Shiny for Python](shiny-python/index.qmd) for dashboards that use Jupyter for computations (requires a server component for deployment).

- [Shiny for R](shiny-r.qmd) for dashboards that use Knitr for computations (requires a server component for deployment).

- [Observable JS](observable.qmd) for client-side interactivity using the Observable dialect of JavaScript.

- [Jupyter Widgets](/docs/interactive/widgets/jupyter.qmd) or [htmlwidgets](/docs/interactive/widgets/htmlwidgets.qmd) for client-side interactivity based on standard Python and R JavaScript widget frameworks.

::: {.callout-note appearance="simple"}
Using Shiny-based interactivity is generally much more flexible and capable than client-only interactivity, however typically a server for deployment.
:::

## Input Layout

There are several ways to layout inputs within interactive dashboards:

- [Sidebars](inputs.qmd#sidebars) provide a collapsible, full height panel for inputs.

- [Input Panels](inputs.qmd#input-panels) provide a toolbar-style horizontal panel for inputs.

- [Card Inputs](inputs.qmd#card-inputs) are directly embedded in the header or footer of cards.

The article on [Input Layout](inputs.qmd) covers these methods in depth along with tips on doing more sophisticated layout of groups of inputs.
